@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --radius: 0.625rem;
  --radius-sm: 0.375rem;
  --radius-md: 0.5rem;
  --radius-lg: 0.75rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
  
  /* Ensure rounded corners for UI elements */
  button, .btn, [data-slot="button"] {
    border-radius: var(--radius-md) !important;
  }
  
  .badge, [data-slot="badge"] {
    border-radius: var(--radius-md) !important;
  }
  
  .card, .dialog, .popover {
    border-radius: var(--radius-lg) !important;
  }
  
  .input, input[type="text"], input[type="email"], input[type="password"] {
    border-radius: var(--radius-md) !important;
  }
}

@layer utilities {
  /* Additional utility classes for rounded corners */
  .rounded-ui {
    border-radius: var(--radius-md);
  }
  
  .rounded-ui-sm {
    border-radius: var(--radius-sm);
  }
  
  .rounded-ui-lg {
    border-radius: var(--radius-lg);
  }
  
  /* Ensure Tailwind rounded classes work properly */
  .rounded-sm {
    border-radius: 0.125rem !important;
  }
  
  .rounded-md {
    border-radius: var(--radius-md) !important;
  }
  
  .rounded-lg {
    border-radius: var(--radius-lg) !important;
  }
  
  .rounded-xl {
    border-radius: 1rem !important;
  }
  
  .rounded-2xl {
    border-radius: 1.5rem !important;
  }
  
  .rounded-full {
    border-radius: 9999px !important;
  }
}

/* Force rounded corners with maximum specificity */
button.rounded-md,
.btn.rounded-md,
[data-slot="button"].rounded-md {
  border-radius: var(--radius-md) !important;
}

.badge.rounded-md,
[data-slot="badge"].rounded-md {
  border-radius: var(--radius-md) !important;
}

.card.rounded-xl,
.dialog.rounded-lg,
.popover.rounded-lg {
  border-radius: var(--radius-lg) !important;
}

input.rounded-md,
.input.rounded-md,
[data-slot="input"].rounded-md {
  border-radius: var(--radius-md) !important;
}